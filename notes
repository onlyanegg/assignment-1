- How do I wanna do this?
  - Run a job every 5s to update all security's last price? 
  - The naive implementation is to use the backend as a passthrough to the securities api
  - websockets or server push to update quotes in real-time
  - paging for followed tickers
  - search
- The list of tickers is pretty small. I could query it all and search locally instead of having a
  search api. But it may not be realistic. Should I design this for the limited ticker list I have
  or for a larger more realistic list?
  - There are more than 58k tickers
  - I'll design for what I have now. And maybe update it in v1
- Is there already a login endpoint?
  - yes
- How do I do authentication in views?
- How do I get request headers?
- how come the securities doesn't have id?

# v0

- list securities
  - GET /securities
- add to watchlist
  - POST /subscriptions {symbol: "APPL"}
- remove from watchlist
  - DELETE /subscriptions/appl
- prices should update every 5 seconds
  - GET /subscriptions
  - query every 5 seconds

# v1

- Add fuzzy search
- Use websockets for subscription updates, celery to populate redis and the db
- Use redis to store latest ticker prices
- Search as you type
- Add search endpoint
  - /search?q=apple
  - does case-insensitive search on symbols and name
- migrate to uuids for users
